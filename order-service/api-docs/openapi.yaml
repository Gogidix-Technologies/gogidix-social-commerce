openapi: 3.0.3
info:
  title: Order Service API
  description: |
    API for managing orders, order processing, payments, and fulfillment in the Social Commerce ecosystem.
    This service handles order creation, status tracking, payment processing, and shipping management.
  version: 1.0.0
  contact:
    name: Order Service Support
    email: support@microsocialecommerce.com
servers:
  - url: http://localhost:8082
    description: Local development server
  - url: https://api.microsocialecommerce.com/order
    description: Production server
tags:
  - name: Order
    description: Order management operations
  - name: Order Status
    description: Order status and tracking operations
  - name: Order History
    description: Order history and audit operations
  - name: Payment
    description: Order payment operations
  - name: Shipping
    description: Order shipping operations
  - name: Analytics
    description: Order analytics and reporting
paths:
  /api/orders:
    post:
      tags:
        - Order
      summary: Create a new order
      description: Create a new order for the authenticated user
      operationId: createOrder
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid input
        '403':
          description: Access denied
    get:
      tags:
        - Order
      summary: Get all orders
      description: Retrieve all orders with pagination (Admin/Staff only)
      operationId: getAllOrders
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page number (0-based)
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: Page size
          schema:
            type: integer
            default: 10
        - name: sort
          in: query
          description: Sort field
          schema:
            type: string
            default: createdAt
        - name: direction
          in: query
          description: Sort direction
          schema:
            type: string
            enum: [ASC, DESC]
            default: DESC
      responses:
        '200':
          description: Orders retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PagedResponse'
        '403':
          description: Access denied
  /api/orders/{id}:
    get:
      tags:
        - Order
      summary: Get order by ID
      description: Retrieve a specific order by its unique identifier
      operationId: getOrderById
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Order ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Order retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '403':
          description: Access denied
        '404':
          description: Order not found
    delete:
      tags:
        - Order
      summary: Delete an order
      description: Delete an order (Admin only)
      operationId: deleteOrder
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Order ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Order deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '403':
          description: Access denied
        '404':
          description: Order not found
  /api/orders/number/{orderNumber}:
    get:
      tags:
        - Order
      summary: Get order by order number
      description: Retrieve a specific order by its order number
      operationId: getOrderByOrderNumber
      security:
        - BearerAuth: []
      parameters:
        - name: orderNumber
          in: path
          required: true
          description: Order number
          schema:
            type: string
      responses:
        '200':
          description: Order retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '403':
          description: Access denied
        '404':
          description: Order not found
  /api/orders/my-orders:
    get:
      tags:
        - Order
      summary: Get user's orders
      description: Retrieve all orders for the authenticated user
      operationId: getMyOrders
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page number (0-based)
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: Page size
          schema:
            type: integer
            default: 10
        - name: sort
          in: query
          description: Sort field
          schema:
            type: string
            default: createdAt
        - name: direction
          in: query
          description: Sort direction
          schema:
            type: string
            enum: [ASC, DESC]
            default: DESC
      responses:
        '200':
          description: Orders retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PagedResponse'
  /api/orders/my-orders/status/{status}:
    get:
      tags:
        - Order
      summary: Get user's orders by status
      description: Retrieve user's orders filtered by status
      operationId: getMyOrdersByStatus
      security:
        - BearerAuth: []
      parameters:
        - name: status
          in: path
          required: true
          description: Order status
          schema:
            $ref: '#/components/schemas/OrderStatus'
        - name: page
          in: query
          description: Page number (0-based)
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: Page size
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Orders retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PagedResponse'
  /api/orders/status/{status}:
    get:
      tags:
        - Order Status
      summary: Get orders by status
      description: Retrieve orders filtered by status (Admin/Staff only)
      operationId: getOrdersByStatus
      security:
        - BearerAuth: []
      parameters:
        - name: status
          in: path
          required: true
          description: Order status
          schema:
            $ref: '#/components/schemas/OrderStatus'
        - name: page
          in: query
          description: Page number (0-based)
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: Page size
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Orders retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PagedResponse'
        '403':
          description: Access denied
  /api/orders/{id}/status:
    patch:
      tags:
        - Order Status
      summary: Update order status
      description: Update the status of an order (Admin/Staff only)
      operationId: updateOrderStatus
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Order ID
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderStatusRequest'
      responses:
        '200':
          description: Order status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '403':
          description: Access denied
        '404':
          description: Order not found
  /api/orders/{id}/cancel:
    patch:
      tags:
        - Order Status
      summary: Cancel an order
      description: Cancel an order by the user or admin
      operationId: cancelOrder
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Order ID
          schema:
            type: integer
            format: int64
        - name: reason
          in: query
          required: true
          description: Cancellation reason
          schema:
            type: string
      responses:
        '200':
          description: Order cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '403':
          description: Access denied
        '404':
          description: Order not found
        '400':
          description: Order cannot be cancelled
  /api/orders/{id}/payment:
    patch:
      tags:
        - Payment
      summary: Update payment information
      description: Update payment information for an order (Admin/Staff only)
      operationId: updateOrderPayment
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Order ID
          schema:
            type: integer
            format: int64
        - name: transactionId
          in: query
          required: true
          description: Payment transaction ID
          schema:
            type: string
        - name: paid
          in: query
          required: true
          description: Whether payment is complete
          schema:
            type: boolean
      responses:
        '200':
          description: Order payment updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '403':
          description: Access denied
        '404':
          description: Order not found
  /api/orders/{id}/shipping:
    patch:
      tags:
        - Shipping
      summary: Update shipping information
      description: Update shipping information for an order (Admin/Staff only)
      operationId: updateOrderShipping
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Order ID
          schema:
            type: integer
            format: int64
        - name: trackingNumber
          in: query
          required: true
          description: Shipping tracking number
          schema:
            type: string
        - name: shippingProvider
          in: query
          required: false
          description: Shipping provider name
          schema:
            type: string
      responses:
        '200':
          description: Order shipping updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '403':
          description: Access denied
        '404':
          description: Order not found
  /api/orders/search:
    get:
      tags:
        - Order
      summary: Search orders
      description: Search orders by keyword (Admin/Staff only)
      operationId: searchOrders
      security:
        - BearerAuth: []
      parameters:
        - name: keyword
          in: query
          required: true
          description: Search keyword
          schema:
            type: string
        - name: page
          in: query
          description: Page number (0-based)
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: Page size
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Orders found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PagedResponse'
        '403':
          description: Access denied
  /api/orders/statistics:
    get:
      tags:
        - Analytics
      summary: Get order statistics
      description: Get order statistics within a date range (Admin/Staff only)
      operationId: getOrderStatistics
      security:
        - BearerAuth: []
      parameters:
        - name: startDate
          in: query
          required: true
          description: Start date (ISO-8601 format)
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          required: true
          description: End date (ISO-8601 format)
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Order statistics retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/OrderStatisticsResponse'
        '403':
          description: Access denied
  /api/orders/recent:
    get:
      tags:
        - Analytics
      summary: Get recent orders
      description: Get orders within the last N hours (Admin/Staff only)
      operationId: getRecentOrders
      security:
        - BearerAuth: []
      parameters:
        - name: hours
          in: query
          description: Number of hours to look back
          schema:
            type: integer
            default: 24
        - name: page
          in: query
          description: Page number (0-based)
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: Page size
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Recent orders retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PagedResponse'
        '403':
          description: Access denied
  /api/orders/by-product/{productId}:
    get:
      tags:
        - Analytics
      summary: Get orders by product
      description: Get orders containing a specific product (Admin/Staff only)
      operationId: getOrdersByProduct
      security:
        - BearerAuth: []
      parameters:
        - name: productId
          in: path
          required: true
          description: Product ID
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          description: Page number (0-based)
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: Page size
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Orders retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PagedResponse'
        '403':
          description: Access denied
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: object
    PagedResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/OrderSummaryResponse'
        page:
          type: integer
        size:
          type: integer
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
        last:
          type: boolean
    OrderDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        orderNumber:
          type: string
        userId:
          type: integer
          format: int64
        customerName:
          type: string
        customerEmail:
          type: string
        customerPhone:
          type: string
        status:
          $ref: '#/components/schemas/OrderStatus'
        totalAmount:
          type: number
          format: decimal
        subtotalAmount:
          type: number
          format: decimal
        taxAmount:
          type: number
          format: decimal
        shippingAmount:
          type: number
          format: decimal
        discountAmount:
          type: number
          format: decimal
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethod'
        paymentTransactionId:
          type: string
        paymentDate:
          type: string
          format: date-time
        isPaid:
          type: boolean
        notes:
          type: string
        shippingAddress:
          $ref: '#/components/schemas/AddressDTO'
        billingAddress:
          $ref: '#/components/schemas/AddressDTO'
        couponCode:
          type: string
        trackingNumber:
          type: string
        shippingProvider:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemDTO'
        history:
          type: array
          items:
            $ref: '#/components/schemas/OrderHistoryDTO'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        cancelledAt:
          type: string
          format: date-time
        shippedAt:
          type: string
          format: date-time
        deliveredAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time
    OrderSummaryResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        orderNumber:
          type: string
        customerName:
          type: string
        status:
          $ref: '#/components/schemas/OrderStatus'
        totalAmount:
          type: number
          format: decimal
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethod'
        isPaid:
          type: boolean
        itemCount:
          type: integer
        shippingAddress:
          type: string
          description: Formatted shipping address
        trackingNumber:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    CreateOrderRequest:
      type: object
      required:
        - userId
        - customerName
        - customerEmail
        - items
      properties:
        userId:
          type: integer
          format: int64
        customerName:
          type: string
        customerEmail:
          type: string
        customerPhone:
          type: string
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethod'
        notes:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemRequest'
        shippingAddress:
          $ref: '#/components/schemas/AddressRequest'
        billingAddress:
          $ref: '#/components/schemas/AddressRequest'
        useExistingAddress:
          type: boolean
        existingShippingAddressId:
          type: integer
          format: int64
        existingBillingAddressId:
          type: integer
          format: int64
        sameAsShipping:
          type: boolean
        saveAddressToProfile:
          type: boolean
        couponCode:
          type: string
        taxAmount:
          type: number
          format: decimal
        shippingAmount:
          type: number
          format: decimal
        discountAmount:
          type: number
          format: decimal
    UpdateOrderStatusRequest:
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/OrderStatus'
        note:
          type: string
        userId:
          type: integer
          format: int64
        trackingNumber:
          type: string
        shippingProvider:
          type: string
    OrderItemDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        orderId:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        productVariantId:
          type: integer
          format: int64
        productName:
          type: string
        productVariantName:
          type: string
        sku:
          type: string
        quantity:
          type: integer
        price:
          type: number
          format: decimal
        discountAmount:
          type: number
          format: decimal
        taxAmount:
          type: number
          format: decimal
        imageUrl:
          type: string
        notes:
          type: string
        isGift:
          type: boolean
        giftMessage:
          type: string
        isCustomizable:
          type: boolean
        customizationOptions:
          type: object
        totalPrice:
          type: number
          format: decimal
        netPrice:
          type: number
          format: decimal
        finalPrice:
          type: number
          format: decimal
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    OrderItemRequest:
      type: object
      required:
        - productId
        - quantity
        - price
      properties:
        productId:
          type: integer
          format: int64
        productVariantId:
          type: integer
          format: int64
        quantity:
          type: integer
        price:
          type: number
          format: decimal
        discountAmount:
          type: number
          format: decimal
        notes:
          type: string
        isGift:
          type: boolean
        giftMessage:
          type: string
        isCustomizable:
          type: boolean
        customizationOptions:
          type: object
    OrderHistoryDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        orderId:
          type: integer
          format: int64
        status:
          $ref: '#/components/schemas/OrderStatus'
        note:
          type: string
        userId:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
    AddressDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        company:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
        country:
          type: string
        phone:
          type: string
        email:
          type: string
        isDefault:
          type: boolean
        isShipping:
          type: boolean
        isBilling:
          type: boolean
        formattedAddress:
          type: string
    AddressRequest:
      type: object
      required:
        - firstName
        - lastName
        - addressLine1
        - city
        - state
        - postalCode
        - country
      properties:
        firstName:
          type: string
        lastName:
          type: string
        companyName:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
        country:
          type: string
        phone:
          type: string
        email:
          type: string
        isDefault:
          type: boolean
    OrderStatisticsResponse:
      type: object
      properties:
        totalOrders:
          type: integer
          format: int64
        totalRevenue:
          type: number
          format: decimal
        averageOrderValue:
          type: number
          format: decimal
        totalCustomers:
          type: integer
          format: int64
        ordersByStatus:
          type: object
          additionalProperties:
            type: integer
            format: int64
        ordersByPaymentMethod:
          type: object
          additionalProperties:
            type: integer
            format: int64
        totalTax:
          type: number
          format: decimal
        totalShipping:
          type: number
          format: decimal
        totalDiscounts:
          type: number
          format: decimal
        cancelRate:
          type: number
          format: decimal
    OrderStatus:
      type: string
      enum:
        - CREATED
        - AWAITING_PAYMENT
        - PAID
        - PROCESSING
        - CONFIRMED
        - AWAITING_PICKUP
        - SHIPPED
        - DELIVERED
        - COMPLETED
        - PENDING_RETURN
        - RETURNED
        - CANCELLED
        - REFUNDED
    PaymentMethod:
      type: string
      enum:
        - CREDIT_CARD
        - DEBIT_CARD
        - PAYPAL
        - BANK_TRANSFER
        - CASH_ON_DELIVERY
        - CRYPTOCURRENCY
        - APPLE_PAY
        - GOOGLE_PAY
        - BUY_NOW_PAY_LATER
